* Problem description
Lecturers in Mechanics classes do not have extensive Python experience, and for
some it's useful to have a baseline for how to use the Python toolchain
interactively in a lecture. Early priorities based on conversation with Vegard
Aune in October 2018:

- Focus on plotting and visualization
  - The notebook user can do the calculations, that's not hard
  - Simple interaction is useful.
- Demonstrate comparing plots
  - Can we compare moment and displacement diagrams to identify inflection
    points?
- Prioritize simple usage over complex functionality
  - Crashes in lectures are not acceptable
  - Time limitations, 1-10 minutes of usage is reasonable
- Chosen examples
  - Lecture 6, slide 7: *Fritt opplagt bjelke med utkrager over h√∏yre opplegg,
    belastet. Momentdiagram.*
  - Lecture 10, slide 2: *Samme eksempel, inkludert forskyvningsdiagram*
* Solution plan
- Encode problem parameters in python module to be imported as required.
- Do solution in notebook
- Visualize solution in notebook
* Solution components
- Problem description in library: *ntnu.kt.course.tkt4116.lecture07*
- Test script in docs/lecture_example/tkt4116_lecture06
  - Just for interactive use
- Notebook in docs/lecture_example/tkt4116_lecture06

In order to get started, I need to be able to run this locally.
